{"version":3,"sources":["components/appHeader/AppHeader.js","resources/img/mjolnir.png","services/MarvelService.js","components/spinner/Spinner.js","components/errorMessage/error.png","components/errorMessage/ErrorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","resources/img/vision.png","components/errorBoundary/ErrorBoundary.js","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","_apiBase","_apiKey","_baseOffset","getResource","url","fetch","res","ok","Error","status","json","getAllCharacters","a","offset","data","results","map","_transformCharacter","getCharacter","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","src","img","alt","RandomChar","state","loading","error","marvelService","onCharLoaded","setState","onError","onCharLoading","updateChar","Math","floor","random","then","catch","this","errorMessage","spinner","content","onClick","mjolnir","Component","View","imgStyle","CharList","charList","newItemLoading","charEnded","onRequest","onCharListLoading","onCharListLoaded","newCharList","ended","length","itemRefs","setRef","ref","push","focusOnItem","forEach","item","classList","remove","add","focus","arr","i","tabIndex","props","onCharSelected","onKeyPress","e","key","renderItems","disabled","Skeleton","CharInfo","charId","prevProps","prevState","errorInfo","skeleton","ErrorBoundary","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9e93e58.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","class MarvelService {\r\n  _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n  _apiKey = 'apikey=5db426520b40cc6e71e565e79d23d590';\r\n  _baseOffset = 210;\r\n\r\n  getResource = async (url) => {\r\n    let res = await fetch(url);\r\n    if(!res.ok){\r\n      throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n    }\r\n    return await res.json();\r\n  }\r\n  getAllCharacters = async (offset = this._baseOffset) =>{\r\n    const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`)\r\n    return res.data.results.map(this._transformCharacter)\r\n  }\r\n  getCharacter = async (id) =>{\r\n    const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`)\r\n    return this._transformCharacter(res.data.results[0]);\r\n  }\r\n  _transformCharacter = (char) => {\r\n    return{\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\r\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items\r\n    }\r\n  }\r\n}\r\n\r\nexport default MarvelService;","const Spinner = () => {\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n      <g transform=\"translate(80,50)\">\r\n        <g transform=\"rotate(0)\">\r\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n          </circle>\r\n        </g>\r\n      </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n      <g transform=\"rotate(45)\">\r\n        <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n          <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n          <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n        </circle>\r\n      </g>\r\n    </g><g transform=\"translate(50,80)\">\r\n      <g transform=\"rotate(90)\">\r\n        <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n          <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n          <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n        </circle>\r\n      </g>\r\n    </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n      <g transform=\"rotate(135)\">\r\n        <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n          <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n          <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n        </circle>\r\n      </g>\r\n    </g><g transform=\"translate(20,50.00000000000001)\">\r\n      <g transform=\"rotate(180)\">\r\n        <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n          <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n          <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n        </circle>\r\n      </g>\r\n    </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n      <g transform=\"rotate(225)\">\r\n        <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n          <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n          <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n        </circle>\r\n      </g>\r\n    </g><g transform=\"translate(49.99999999999999,20)\">\r\n      <g transform=\"rotate(270)\">\r\n        <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n          <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n          <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n        </circle>\r\n      </g>\r\n    </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n      <g transform=\"rotate(315)\">\r\n        <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n          <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n          <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n        </circle>\r\n      </g>\r\n    </g>\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.adb00686.png\";","import img from './error.png'\r\n\r\nconst ErrorMessage = () => {\r\n  return(\r\n    <img src={img} style={{margin: '0 auto', height: \"250px\"}}  alt='Error'/>\r\n  )\r\n}\r\n\r\nexport default ErrorMessage;","import './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport {Component} from \"react\";\nimport MarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\n\n\nclass RandomChar extends Component{\n    state = {\n        char:[],\n        loading: true,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({char, loading: false})\n    }\n\n    onError = () =>{\n        this.setState({loading: false, error: true})\n    }\n\n    onCharLoading = () => {\n        this.setState({loading: true})\n    }\n\n    updateChar = () => {\n        const id = Math.floor(Math.random() * (1011000 - 1011100) + 1011000);\n        this.onCharLoading();\n        this.marvelService\n            .getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n    }\n\n    render() {\n        const{char, loading, error} = this.state;\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? <View char={char}/> : null;\n        return (\n          <div className=\"randomchar\">\n              {errorMessage}\n              {spinner}\n              {content}\n              <div className=\"randomchar__static\">\n                  <p className=\"randomchar__title\">\n                      Random character for today!<br/>\n                      Do you want to get to know him better?\n                  </p>\n                  <p className=\"randomchar__title\">\n                      Or choose another one\n                  </p>\n                  <button onClick={() => this.updateChar()} className=\"button button__main\">\n                      <div className=\"inner\">try it</div>\n                  </button>\n                  <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n              </div>\n          </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n      <div className=\"randomchar__block\">\n          <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n          <div className=\"randomchar__info\">\n              <p className=\"randomchar__name\">{name}</p>\n              <p className=\"randomchar__descr\">\n                  {description}\n              </p>\n              <div className=\"randomchar__btns\">\n                  <a href={homepage} className=\"button button__main\">\n                      <div className=\"inner\">homepage</div>\n                  </a>\n                  <a href={wiki} className=\"button button__secondary\">\n                      <div className=\"inner\">Wiki</div>\n                  </a>\n              </div>\n          </div>\n      </div>\n    )\n}\n\nexport default RandomChar;","import {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\nimport './charList.scss';\n\nclass CharList extends Component {\n\n  state = {\n    charList: [],\n    loading: true,\n    error: false,\n    newItemLoading: false,\n    offset: 210,\n    charEnded: false\n  }\n\n  marvelService = new MarvelService();\n\n  componentDidMount() {\n    this.onRequest();\n  }\n\n  onRequest = (offset) => {\n    this.onCharListLoading();\n    this.marvelService.getAllCharacters(offset)\n      .then(this.onCharListLoaded)\n      .catch(this.onError)\n  }\n\n  onCharListLoading = () => {\n    this.setState({\n      newItemLoading: true\n    })\n  }\n\n  onCharListLoaded = (newCharList) => {\n    let ended = false;\n    if (newCharList.length < 9) {\n      ended = true;\n    }\n\n    this.setState(({offset, charList}) => ({\n      charList: [...charList, ...newCharList],\n      loading: false,\n      newItemLoading: false,\n      offset: offset + 9,\n      charEnded: ended\n    }))\n  }\n\n  onError = () => {\n    this.setState({\n      error: true,\n      loading: false\n    })\n  }\n\n  itemRefs = [];\n\n  setRef = (ref) => {\n    this.itemRefs.push(ref);\n  }\n\n  focusOnItem = (id) => {\n    this.itemRefs.forEach(item => item.classList.remove('char__item_selected'));\n    this.itemRefs[id].classList.add('char__item_selected');\n    this.itemRefs[id].focus();\n  }\n  renderItems(arr) {\n    const items =  arr.map((item, i) => {\n      let imgStyle = {'objectFit' : 'cover'};\n      if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'unset'};\n      }\n\n      return (\n        <li\n          className=\"char__item\"\n          tabIndex={0}\n          ref={this.setRef}\n          key={item.id}\n          onClick={() => {\n            this.props.onCharSelected(item.id);\n            this.focusOnItem(i);\n          }}\n          onKeyPress={(e) => {\n            if (e.key === ' ' || e.key === \"Enter\") {\n              this.props.onCharSelected(item.id);\n              this.focusOnItem(i);\n            }\n          }}>\n          <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n          <div className=\"char__name\">{item.name}</div>\n        </li>\n      )\n    });\n    return (\n      <ul className=\"char__grid\">\n        {items}\n      </ul>\n    )\n  }\n\n  render() {\n\n    const {charList, loading, error, offset, newItemLoading, charEnded} = this.state;\n\n    const items = this.renderItems(charList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error) ? items : null;\n\n    return (\n      <div className=\"char__list\">\n        {errorMessage}\n        {spinner}\n        {content}\n        <button\n          className=\"button button__main button__long\"\n          disabled={newItemLoading}\n          style={{'display': charEnded ? 'none' : 'block'}}\n          onClick={() => this.onRequest(offset)}>\n          <div className=\"inner\">load more</div>\n        </button>\n      </div>\n    )\n  }\n}\n\nCharList.propTypes = {\n  onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import {Component} from \"react\";\nimport './charInfo.scss';\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport Skeleton from \"../skeleton/Skeleton\";\nimport MarvelService from \"../../services/MarvelService\";\nimport PropTypes from 'prop-types'\n\nclass CharInfo extends Component{\n    state = {\n        char: null,\n        loading: false,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if(this.props.charId !== prevProps.charId){\n            this.updateChar()\n        }\n    }\n\n    componentDidCatch(error, errorInfo) {\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({char, loading: false})\n    }\n\n    onError = () =>{\n        this.setState({loading: false, error: true})\n    }\n\n    onCharLoading = () => {\n        this.setState({loading: true})\n    }\n\n    updateChar = () => {\n        const{charId} = this.props;\n        if (!charId){\n            return\n        }\n        this.onCharLoading();\n        this.marvelService\n          .getCharacter(charId)\n          .then(this.onCharLoaded)\n          .catch(this.onError)\n    }\n\n   render() {\n       const {char, loading, error} = this.state;\n       const skeleton = char || loading || error ? null : <Skeleton/>\n       const errorMessage = error ? <ErrorMessage/> : null;\n       const spinner = loading ? <Spinner/> : null;\n       const content = !(loading || error || !char) ? <View char={char}/> : null;\n       return (\n         <div className=\"char__info\">\n             {skeleton}\n             {errorMessage}\n             {content}\n             {spinner}\n         </div>\n       )\n   }\n}\nconst View = ({char})=> {\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n   return(\n     <>\n         <div className=\"char__basics\">\n             <img src={thumbnail} alt={name} style={imgStyle}/>\n             <div>\n                 <div className=\"char__info-name\">{name}</div>\n                 <div className=\"char__btns\">\n                     <a href={homepage} className=\"button button__main\">\n                         <div className=\"inner\">homepage</div>\n                     </a>\n                     <a href={wiki} className=\"button button__secondary\">\n                         <div className=\"inner\">Wiki</div>\n                     </a>\n                 </div>\n             </div>\n         </div>\n         <div className=\"char__descr\">\n             {description}\n         </div>\n         <div className=\"char__comics\">Comics:</div>\n         <ul className=\"char__comics-list\">\n             {comics.length > 0 ? null: 'There is no comics with this character'}\n             {comics.map((item, i) => {\n                 // eslint-disable-next-line\n                 if(i > 9) return;\n                     return (\n                       <li key={i} className=\"char__comics-item\">\n                           {item.name}\n                       </li>\n                     )\n             })}\n         </ul>\n     </>\n   )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import {Component} from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component{\r\n  state = {\r\n    error: false\r\n  }\r\n  componentDidCatch(error, errorInfo) {\r\n    this.setState({error: true})\r\n  }\r\n  render() {\r\n    if (this.state.error){\r\n      return <ErrorMessage/>\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\nexport default ErrorBoundary;","import {Component} from \"react\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\n\nimport decoration from '../../resources/img/vision.png';\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nclass App extends Component{\n  state = {\n    selectedChar: null\n  }\n  onCharSelected = (id) => {\n    this.setState({\n      selectedChar: id\n    })\n  }\n    render() {\n      return (\n        <div className=\"app\">\n          <AppHeader/>\n          <main>\n            <ErrorBoundary>\n              <RandomChar/>\n            </ErrorBoundary>\n            <div className=\"char__content\">\n              <ErrorBoundary>\n                <CharList onCharSelected={this.onCharSelected}/>\n              </ErrorBoundary>\n              <ErrorBoundary>\n                <CharInfo charId={this.state.selectedChar}/>\n              </ErrorBoundary>\n            </div>\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n          </main>\n        </div>\n      )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}